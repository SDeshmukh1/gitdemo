i`Notes
- collabedit.com/84mg5

Automating Start and Stop the EC2 Instance
Cloudwatch
- To trigger lambda function

Lambda Function
- To Stop the EC2 Instance

AWS
- Create EC2 Instance

https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch

Python 2.7 script to stop EC2 instance
import boto3
# Enter the region your instances are in. Include only the region without specifying Availability Zone; e.g., 'us-east-1'
region = 'us-east-2'
# Enter your instances here: ex. ['X-XXXXXXXX', 'X-XXXXXXXX']
instances = ['i-03c23b6410fcd2e11']

def lambda_handler(event, context):
    ec2 = boto3.client('ec2', region_name=region)
    ec2.stop_instances(InstanceIds=instances)
    print 'stopped your instances: ' + str(instances)
	
linux

netstat -tulpn
- Open port details and programs

cat /etc/passwd
- All the Users available

Who
- login user name

ps -ef 
- All the running process on machine

ps -ef | grep '2670'
- gives the process details to the perticular port

Set the password for root
vi etc/ssh/sshd_config - to open the file in vi editor

esc + Shift + :
- TO wrote the command 

set number
- To give the number to every line


esc + /Password
- To search password in 
Remove the comment for passwordAuthentication Yes
Add the comment for PasswordAuthentication No

i
- to start insert mode

esc + /Permit
Remove the comment(#) for RemoveRootLogin Yes

To save vi editor changes and exit
:wq!

To quit without saving
:q!

Restart the SSH daemon
service sshd restart

uname -a 
- to check OS related details

Change Password
- passwd

To download httpd
yum install httpd -d

to intstall rpm
rpm -u rpmname

to check if httpd is installed or not
rpm -qa | grep httpd

Git

create local reposiraory
git init
Git add 
git commit

Topic for Today
	1. YML Document
	2. Ansible modules
	3. Install Ansible
	4. Ansible Architecture

We will create to 2 redhat ec2 instance 
1 Ansible Controller instance 
----------------------------------------------------Ansible-----------------------------
Ansible Installation
	1. Create a new file called 'ansible.repo' in cd /etc/yum.repos.d
	vi ansible.repo

	2. Copy the following content into it:
	[Ansible]
	name = ansible
	baseurl = https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/
	enabled = 1
	gpgcheck = 0 

	3. Run 'yum update' 
	rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
	yum -y install ansible
	ansible --version

------------------------------------------------------------------------------------------------------------
	2. Edit host file 

Cd /etc/ansible
Vi hosts

[all]
172.31.10.184 ansible_ssh_private_key_file=/root/.ssh/server1.pem ansible_ssh_user=ec2-user
(Private IP of HUB)    		(Private Key)				Login using user                                   

---------------------------------------------------------------------------------------------------------------------------------
	3. Create server1.pem file in /root/.ssh/server1.pem
	chmod 600 server.pem
----------------------------------------------------------------------------------------------------------------------------------
	4. Debug if it is working or not
	ssh -i server1.pem ec2-user@172.31.10.184
----------------------------------------------------------------------------------------------------------------------------------
	5. Run the ansible command
	ansible all -m raw -a 'sudo uptime'
------------------------------------------------------------------------------------------------------------------------------------

Added on 2/3/2019

Ansible modules

To install software
- hosts: ec2-user
  user: ubuntu
  sudo: true
  
  tasks:
    - name: Install Web Server
      yum: pkg=httpd state=installed
	  
To install and Run Service
---
- hosts: all
  user: ec2-user
  sudo: true
  
  vars:
    pack_name: httpd
    serv_name: httpd
  
  tasks:
    - name: Install {{ pack_name }}
      yum: pkg={{ pack_name }} state=installed
    - name: Start {{ serv_name }}
      service: name={{ serv_name }} state=started
	  
To Run Service
---
- hosts: all
  user: ec2-user
  sudo: true

  tasks:
    - name: Start httpd service
      service: name=httpd  state=started

